<?xml version="1.0" ?>
<project name="Test Project" default="test">

    <property name="project.dir" value="." />
    <property name="tests.dir" value="tests" />
    <property name="reports.dir" value="reports" />

    <target name="cleanup" description="Empty Temporary Dirs">
        <delete>
            <fileset dir="tmp/templates_c">
                <include name="*.tpl.php" />
            </fileset>
            <fileset dir="${tests.dir}/${reports.dir}">
                <include name="*.xml" />
                <include name="*.sc" />
            </fileset>
        </delete>
    </target>

    <target name="test" description="Non Selenium Tests" depends="cleanup">
        <echo msg="Running Test Suite" />
        <exec dir="${tests.dir}" checkreturn="true" passthru="true" command="phpunit --exclude-group selenium" />
    </target>

    <target name="test" description="All Tests" depends="cleanup">
        <echo msg="Running Full Test Suite" />
        <exec dir="${tests.dir}" checkreturn="true" passthru="true" command="phpunit" />
    </target>

    <target name="sloc" description="Generate SLOC">
        <echo msg="Generating SLOC" />
        <exec checkreturn="true" passthru="false" command="sloccount --wide --details . 2>/dev/null | grep -v 'Smarty/' > ${tests.dir}/${reports.dir}/sloccount.sc" />
    </target>

    <target name="build" description="Build (excluding selenium tests)" depends="cleanup,sloc">
        <echo msg="Running Tests &amp; Generating Reports" />
        <exec dir="${tests.dir}" checkreturn="true" passthru="true" command="phpunit --log-junit ${reports.dir}/test-results.xml 
        --coverage-html ${reports.dir}/coverage
        --coverage-clover ${reports.dir}/phpunit.coverage.xml
        --exclude-group selenium" />
    </target>

    <target name="fullbuild" description="Full Project Build" depends="cleanup,sloc">
        <echo msg="Cleaning up, Running Tests &amp; Generating Reports" />
        <if>
            <isset property="chmodTmpDirs" />
            <then>
                <echo msg="Making folders writable" />
                <exec passthru="false" command="chmod -R 0777 tmp/ tests/emails/ log/" />
            </then>
        </if>
        <exec dir="${tests.dir}" checkreturn="true" passthru="true" command="phpunit --log-junit ${reports.dir}/test-results.xml 
        --coverage-html ${reports.dir}/coverage
        --coverage-clover ${reports.dir}/phpunit.coverage.xml" />
    </target>

    <target name="dist" depends="fullbuild">
        <echo msg="creating temporary files" />
        <delete dir="/tmp/${env.BUILD_TAG}" />
        <copy todir="/tmp/${env.BUILD_TAG}" overwrite="true" includeemptydirs="true">
            <fileset dir="." />
        </copy>
        <echo msg="removing build data" />
        <delete includeemptydirs="true" verbose="false" failonerror="true">
            <fileset dir="/tmp/${env.BUILD_TAG}">
                <include name="tmp/templates_c/*.tpl.php" />
                <include name=".git**" />
                <include name="test**" />
                <include name="*.xml" />
                <include name="README" />
            </fileset>
        </delete>
        <echo msg="compressing archive" />
        <tar destfile="/tmp/${env.BUILD_TAG}.tar.bz2" basedir="/tmp/${env.BUILD_TAG}" compression="bzip2" />
        <echo msg="copying to remote host" />
        <exec checkreturn="true" passthru="true" command="scp /tmp/${env.BUILD_TAG}.tar.bz2 ${env.remote_user}@${env.remote_host}:${env.remote_dir}" />
        <echo msg="setting up remote project" />
        <exec checkreturn="true" passthru="true" command="ssh ${env.remote_user}@${env.remote_host}
            'mkdir ${env.remote_dir}/${env.BUILD_TAG};
            tar -xjf ${env.remote_dir}/${env.BUILD_TAG}.tar.bz2 -C ${env.remote_dir}/${env.BUILD_TAG};
            rm ${env.remote_symlink}; ln -f -s ${env.remote_dir}/${env.BUILD_TAG} ${env.remote_symlink};
            rm -f ${env.remote_dir}/*.tar.bz2;
            chmod 0777 ${env.remote_symlink}/tmp/ ${env.remote_symlink}/uploads/ ${env.remote_symlink}/log/ -R;'" />
        <echo msg="cleaning up" />
        <exec checkreturn="true" passthru="true" command="rm -f /tmp/${env.BUILD_TAG}.tar.bz2" />
        <echo msg="done" />
    </target>
</project>
